//stepper.MoveStepperToPositionCorrected(10000);
//stepper.move(-500);
//stepper.runToPosition();
//while(stepper.distanceToGo() != 0) {
//    stepper.run();
//  if(gpio_get(MAXSWITCH) == 0) break;
//}
//busy_wait_ms(5000);


//  tft.fillScreen(ILI9341_BLACK);
//  tft.setCursor(80, 140);
//  tft.print(stepper.currentPosition());
//stepper.MoveStepperToPositionCorrected(7000);

//for(int i = 0; i < 1000; i++) {
//stepper.moveTo(1000);
//stepper.runToPosition();
//}
//for(int i = 0; i < 500; i = i + 1){
//stepper.moveTo(2275);
//while(stepper.distanceToGo()){
//stepper.run();
//}
//stepper.moveTo(2150);
//while(stepper.distanceToGo()){
//stepper.runToPosition();
//}
//tft.fillScreen(ILI9341_BLACK);
//tft.setCursor(80, 140);
//tft.print(stepper.currentPosition());
//}

// Test the rotary encoders:
/*
tft.fillScreen(ILI9341_BLACK);
tft.setTextSize(2);
tft.setCursor(20, 90);
while(1) {
    if(result) {
      tft.fillScreen(ILI9341_BLACK);
      tft.setCursor(20, 90);
      tft.print(countEncoder);
}}
*/

//VSWR = swr.ReadSWRValue();
//  tft.fillScreen(ILI9341_BLACK);
//  tft.setCursor(50, 10);
//  tft.print("TUNED SWR:");
//  tft.setCursor(110, 50);
//  tft.print(VSWR, 3);
//busy_wait_ms(5000);
/*  Troubleshoot VSWR Bridge
  tft.setTextSize(3);
  tft.setCursor(20, 90);
  tft.print(swr.forward_offset);
  tft.setCursor(110, 90);
  tft.print(swr.forward_voltage);
  tft.setCursor(20, 120);
  tft.print(swr.reverse_offset);
  tft.setCursor(110, 120);
  tft.print(swr.reverse_voltage);
  int forward, reverse;
  adc_select_input(0);
  reverse = adc_read();
  busy_wait_ms(1000);
  adc_select_input(0);
  forward = adc_read();
  tft.setCursor(20, 150);
  tft.print(reverse);
  tft.setCursor(160, 150);
  tft.print(forward);
*/

// Power down
//dds.SendFrequency(0);
//gpio_put(POWER_SWITCH, 0);

/* Test the 5 pushbottons:
tft.fillScreen(ILI9341_BLACK);
tft.setTextSize(2);
while(1) {
if(!gpio_get(4)) tft.print("Button 4");
else if(!gpio_get(5)) tft.print("Button 5");
else if(!gpio_get(6)) tft.print("Button 6");
else if(!gpio_get(7)) tft.print("Button 7");
else if(!gpio_get(8)) tft.print("Button 8");
else if(!gpio_get(19)) tft.print("Encoder 1");
else if(!gpio_get(20)) tft.print("Encoder 2");
else tft.print("No button pressed");
busy_wait_ms(200);
tft.fillScreen(ILI9341_BLACK);
tft.setCursor(20, 90);
}
*/

//tft.fillScreen(ILI9341_BLACK);
//tft.setTextSize(4);
//tft.setCursor(80, 40);
//tft.print(presetFrequencies[0][0]);
//autotune.AutoTuneSWRQuick();

//Calibrate calibrate = Calibrate(display, stepper, tft, dds, swr, autotune);
//Presets presets = Presets(tft, stepper, dds, autotune, swr, display);
//Buttons buttons = Buttons(display, presets, dds, calibrate);

//  Put the DDS to sleep:
//dds.SendFrequency(0);
//  dds.DDSWakeUp();
//  dds.DDSWakeUp();

//  dds.SendFrequency(8045000);
//  dds.SendFrequency(8045000);
//AutoTune autotune = AutoTune(swr, tft, stepper, display);
//class DisplayManagement;
//GraphPlot graphplot = GraphPlot(tft, dds, DisplayManagement & display);

  //dds.DDSWakeUp();
  //  Use this frequency to measure SWR bridge offsets:
// dds.SendFrequency(10100000);
//  busy_wait_ms(5000);
//dds.SendFrequency(0);

//AccelStepper stepper =AccelStepper(1, STEPPERPUL, STEPPERDIR);

//  Examples of Stepper control functions:
//  stepper.ResetStepperToZero();
//  steppermanage.setCurrentPosition(0);  //  Sets max speed to zero!
//  steppermanage.setMaxSpeed(500);
//  steppermanage.setAcceleration(110);
//  steppermanage.runToNewPosition(2675);
//  steppermanage.disableOutputs();

// Instantiate SWR object.
//SWR swr = SWR();
//  Now measure the ADC offsets before the DDS is active.
//swr.ReadADCoffsets();
//  Put the DDS to sleep:
//dds.SendFrequency(0);

//eeprom.initialize();  //  Set the buffer to all zeros.
  
  /*  EEPROM test code.
  const uint32_t *flash_target_contents = (const uint32_t *) (XIP_BASE + FLASH_TARGET_OFFSET);
  eeprom_data = flash_target_contents[1];
  tft.setTextSize(2);
  tft.setCursor(80, 40);
  //tft.print(eeprom_data);
  tft.print(data.bandLimitPositionCounts[0][0]);
  eeprom_data = flash_target_contents[2];
  tft.setCursor(80, 60);
  //tft.print(eeprom_data);
  tft.print(data.bandLimitPositionCounts[0][1]);
  eeprom_data = flash_target_contents[3];
  tft.setCursor(80, 80);
  //tft.print(eeprom_data);
  tft.print(data.bandLimitPositionCounts[1][0]);
  tft.setCursor(80, 100);
   tft.print(data.bandLimitPositionCounts[1][1]);
  eeprom_data = flash_target_contents[2];
  tft.setCursor(80, 120);
  //tft.print(eeprom_data);
  tft.print(data.bandLimitPositionCounts[2][0]);
  eeprom_data = flash_target_contents[3];
  tft.setCursor(80, 140);
  //tft.print(eeprom_data);
  tft.print(data.bandLimitPositionCounts[2][1]);
  */

  // Print out a slope:
  //tft.setCursor(80, 160);
  //tft.print(data.hertzPerStepperUnitVVC[3], 1);

  //  Run the same Splash function as in the Mag Loop Controller project.
  
  // Test a GFX graphics primitive by drawing a border:
  //tft.drawRect(1, 1, 318, 238, ILI9341_WHITE);

  